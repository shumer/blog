<?php
/**
 * @file
 *   Module hooks.
 */

use Drupal\advanced_varnish_cache\AdvancedVarnishCache;

/**
 * Implements hook_form_FORM_ID_alter().
 */
function advanced_varnish_cache_form_block_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {

  // Alter block configuration form to add cache settings for varnish.
  // Get block.
  $id = $form['id']['#default_value'];
  $block = \Drupal\block\Entity\Block::load($id);

  // Get block configuration.
  if ($block) {
    $settings = $block->get('settings');

    // Add ESI block support.
    $form['settings']['cache']['esi'] = array(
      '#type' => 'checkbox',
      '#title' => t('ESI block'),
      '#default_value' => $settings['cache']['esi'] ?: FALSE,
    );
  }
}

/**
 * Implements hook_block_view_alter().
 */
function advanced_varnish_cache_block_view_alter(array &$build, \Drupal\Core\Block\BlockPluginInterface $block) {

  $block = $build['#block'];

  // Check if ESI for this block enabled and should we replace block content with ESI tag.
  $varnish = new AdvancedVarnishCache();
  if (!$varnish->cachingEnabled() || isset($block->_esi)) {
    return;
  }

  // Get block configuration.
  $conf = $build['#configuration'];
  $esi = !empty($conf['cache']['esi']) ? TRUE : FALSE;
  if (!$esi) {
    return;
  }

  // If we need to replace block with ESI we change pre_render callback to handle this.
  $build['#theme'] = 'advanced_varnish_cache_esi_block';
  $build['#pre_render'] = [[$varnish, 'buildEsiBlock']];

  // Prevent Drupal from caching ESI block.
  $build['#cache']['max-age'] = 0;
}

/**
 * Implements template_preprocess_advanced_varnish_cache_esi_block().
 */
function template_preprocess_advanced_varnish_cache_esi_block(&$variables) {
  $elements = &$variables['elements'];
  $variables['content'] = $elements['#content'];
}

/**
 * Implements hook_theme().
 */
function advanced_varnish_cache_theme() {
  return array(
    'advanced_varnish_cache_esi_block' => array(
      'render element' => 'elements',
    ),
  );
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function advanced_varnish_cache_form_page_manager_display_variant_edit_block_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {

  // Get form storage.
  $storage = $form_state->getStorage();

  // Get page variant.
  $page = $form_state->getBuildInfo()['args'][0];
  $vid = $storage['display_variant_id'];
  $variant = $page->getVariant($vid);

  // Get current block from page variant.
  $bid = $storage['block_id'];
  $block = $variant->getBlock($bid);

  // Get block settings.
  if ($block) {
    $settings = $block->getConfiguration();
  }
  $form['settings']['cache']['esi'] = array(
    '#type' => 'checkbox',
    '#title' => t('ESI block'),
    '#default_value' => $settings['cache']['esi'] ?: FALSE,
  );

}

/**
 * Implements hook_layout_alter().
 */
function advanced_varnish_cache_layout_alter(&$vars) {
  foreach ($vars as &$layout) {
    $layout['class'] = 'Drupal\advanced_varnish_cache\Plugin\Layout\CacheableLayout';
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function advanced_varnish_cache_form_page_manager_display_variant_edit_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {
  $build = $form_state->getBuildInfo();
  $varnish = \Drupal::service('advanced_varnish_cache_handler');

  $page = $build['callback_object']->getPage();
  $display_varaint = $build['callback_object']->getDisplayVariant();
  $display_varaint_id = $display_varaint->id();
  $options = ['displayVariant' => $display_varaint_id];

  $cacheKeyGenerator = $varnish->getCacheKeyGenerator($page, $options);

  $default = \Drupal::config('advanced_varnish_cache.settings');

  dpm($default);
  $form['cache_setting'] = [
    '#type' => 'details',
    '#title' => t('Cache settings'),
    '#tree' => TRUE,
  ];

  $settings_key = $cacheKeyGenerator->generateSettingsKey();

  $form['cache_setting']['ttl'] = [
    '#type' => 'textfield',
    '#title' => t('TTL'),
    '#default_value' => $default->get($settings_key)['cache_settings']['ttl'],
  ];

  $form['#submit'][] = [\Drupal::service('advanced_varnish_cache_handler'), 'panelsSettingsSubmit'];
}
