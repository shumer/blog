<?php

/**
 * @file
 * Functions to support theming in the dart theme.
 */

use Drupal\Component\Utility\SafeMarkup;
use Drupal\node\Entity\Node;

/**
 * Implements hook_preprocess_HOOK() for HTML document templates.
 */
function dart_preprocess_html(&$variables) {

  /* Add class to html tag */
  //$variables['html_attributes']->addClass('no-js');

  // Don't display the site name twice on the front page (and potentially others)
  /*if (isset($variables['head_title_array']['title']) && isset($variables['head_title_array']['name']) && ($variables['head_title_array']['title'] == $variables['head_title_array']['name'])) {
    $variables['head_title'] = $variables['head_title_array']['name'];
  }*/
}

/**
* Implements hook_page_attachments_alter
*/
function dart_page_attachments_alter(array &$page) {
    // Disabling browser zoom on mobile devices.
    /*foreach ($page['#attached']['html_head'] as &$meta_arr) {
        if (array_search('viewport', $meta_arr)) {
          $meta_arr[0]['#attributes']['content'] .= ', maximum-scale=1.0, user-scalable=0';
        }
    }*/


    // Tell IE to use latest rendering engine (not to use compatibility mode).
    /*$ie_edge = array(
        '#type' => 'html_tag',
        '#tag' => 'meta',
        '#attributes' => array(
        'http-equiv' => 'X-UA-Compatible',
        'content' => 'IE=edge',
        ),
    );
    $page['#attached']['html_head'][] = [$ie_edge, 'ie_edge'];*/
}

/**
* Implements hook_preprocess_page() for PAGE document templates.
*/
function dart_preprocess_page(&$variables) {

}

/**
* Implements hook_theme_suggestions_page_alter().
*/
function dart_theme_suggestions_page_alter(array &$suggestions, array $variables) {

}

/**
* Implements hook_theme_suggestions_node_alter().
*/
function dart_theme_suggestions_node_alter(array &$suggestions, array $variables) {
    /*$node = $variables['elements']['#node'];

    if ($variables['elements']['#view_mode'] == "full") {

    }*/
}

/**
* Implements hook_preprocess_HOOK() for Block document templates.
*/
function dart_preprocess_block(&$variables) {

}

/**
* Implements hook_theme_suggestions_field_alter().
*/
function dart_theme_suggestions_field_alter(array &$suggestions, array $variables) {
  $element = $variables['element'];
  $type    = $element['#entity_type'];
  $bundle  = $element['#bundle'];
  $view_mode = $element['#view_mode'] ;
  $field_name = $element['#field_name'];

  $suggestions[] = 'field__' . $type . '__' . $bundle . '__'  . $field_name;
  $suggestions[] = 'field__' . $type . '__' . $bundle . '__'  . $field_name . '__' . $view_mode;
}

/**
* Implements hook_theme_suggestions_field_alter().
*/
function dart_theme_suggestions_fieldset_alter(array &$suggestions, array $variables) {
    /*$element = $variables['element'];
    if (isset($element['#attributes']['class']) && in_array('form-composite', $element['#attributes']['class'])) {
    $suggestions[] = 'fieldset__form_composite';
    }*/
}

/**
* Implements hook_preprocess_node().
*/
function dart_preprocess_node(&$variables) {
  $node = &$variables['node'];

  $variables['created'] = date('d-m-Y', $node->getChangedTime());
}

/**
* Implements hook_theme_suggestions_views_view_alter().
*/
function dart_theme_suggestions_views_view_alter(array &$suggestions, array $variables) {

}

/**
* Implements hook_preprocess_form().
*/
function dart_preprocess_form(&$variables) {
    //$variables['attributes']['novalidate'] = 'novalidate';
}

/**
* Implements hook_preprocess_select().
*/
function dart_preprocess_select(&$variables) {
    //$variables['attributes']['class'][] = 'select-chosen';
}

/**
* Implements hook_preprocess_field().
*/
function dart_preprocess_field(&$variables, $hook) {
    /*switch ($variables['element']['#field_name']) {
    }*/

}

/**
* Implements hook_preprocess_details().
*/
function dart_preprocess_details(&$variables) {
    /*$variables['attributes']['class'][] = 'details';
    $variables['summary_attributes']['class'] = 'summary';*/
}

/**
* Implements hook_preprocess_menu_local_task().
*/
function dart_preprocess_menu_local_task(&$variables) {
    //$variables['element']['#link']['url']->setOption('attributes', array('class'=>'rounded'));
}

/**
 * Implements hook_theme_suggestions_HOOK().
 */
function dart_theme_suggestions_menu_alter(array &$suggestions, array $variables) {

  $suggestions[] = str_replace('_', '-', $variables['theme_hook_original']);
}

/**
 * Implements hook_preprocess_menu().
 */
function dart_preprocess_menu(&$variables) {
  foreach ($variables['items'] as &$item) {
    $system_path = $item['url']->getInternalPath();
    $path = $system_path == '' ? '<front>' : $system_path;
    $item['attributes']->setAttribute('data-drupal-link-system-path', $path);
  }
}
